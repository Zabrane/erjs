2008-01-19  Alex Graveley  <alex@beatniksoftware.com>

	* er.js: Merge options passed to Ajax API with those of
	Er.Ajax.DefaultOptions.  In Er.Ajax.get, convert urldata to query
	parameters.

2007-12-30  Alex Graveley  <alex@beatniksoftware.com>

	* er.js: Make sleep's argument optional, defaulting to 0.

2007-12-29  Alex Graveley  <alex@beatniksoftware.com>

	* er.js: In Er.DOM, split out event subscription and onetime event
	receive, and make the listener remove itself if it's a onetime.

2007-12-29  Alex Graveley  <alex@beatniksoftware.com>

	* er.js: In Er.Ajax.start, convert POST data to param string.  Add
	Er.Ajax.json, which calls eval on the result message.  Rework to
	not spawn a pid to handle each request.

2007-12-29  Alex Graveley  <alex@beatniksoftware.com>

	* index.html: Move Er.DOM section out of Future Work section,
	since it kinda already works.

	* test.html: Make the text a little less silly.  Add a document
	click handler proc that uses Er.DOM.receive.  Add a link killer
	proc that sleeps and exits abnormally.

	* er.js: Documentation cleanups.  Split non-current process exit
	into ErProc._linkexit.  Make Er.Ajax.post just return the URL
	content directly instead of the message, and throw the message as
	an exception on failed download.

2007-12-28  Alex Graveley  <alex@beatniksoftware.com>

	* er.js: Add Er.DOM.receive, a synchronous DOMEvent listener.  In
	_copy, don't attempt to copy Element, Document, or Event objs.
	
2007-12-28  Alex Graveley  <alex@beatniksoftware.com>

	* er.js: Make link/unlink symmetric, so exit of either link will
	signal the other.  Make exit(pid, reason) to kill another process
	work.  Make link exiting immediate, instead of waiting for
	Er.receive to see the message.  Recycle unused pids.  Recursively
	copy messages passed to Er.send.  Drop unused ErProc._THREAD.

2007-12-26  Alex Graveley  <alex@beatniksoftware.com>

	* er.js (ErProc._threadmain): Apply spawned function to new
	object, to inhibit variable access, and allow arguments to be
	passed directly.
	(ErProc._match): Handle Array patterns as a list of options; any
	single subelement match counts as a successful match.
	(ErProc._receive): Push unhandled messages onto a pending queue,
	so a Er.receive doesn't drop unhandled messages.
	(ErProc._run): Don't toss previous retval in case of a
	StopIteration, since this will hold the final value.

	Add Er.Ajax, and Er.AjaxOptions.  Er.Ajax.get/post do
	pseudo-synchronous calls to Er.Ajax.spawn.

	* test.html: Use Er.Ajax.get to fetch "index.html", and load its
	text into an iframe.

2007-12-21  Alex Graveley  <alex@beatniksoftware.com>

	* index.html: Add this.  Just copy and paste the
	beatniksoftware.com blog post for now, with some headers added.

2007-12-21  Alex Graveley  <alex@beatniksoftware.com>

	* er.js: Add some more doco.
	(ErProc._threadmain): Remove the generator handling, which is not
	needed if we always yield the result of fun(args).
	(ErProc._receive): Sleep(100) after iterating the queue, instead
	of before. Sleep(0), after reading each message.
	
	* Add ChangeLog.
